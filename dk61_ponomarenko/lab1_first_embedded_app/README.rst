Лабораторна робота № 1
======================

``Тема``: Створення першого Embedded-додатку
++++++++++++++++++++++++++++++++++++++++++++

``Мета``: Використовуючи мову програмування С, розробити та проаналізувати роботу програми, яка запускає виконання двох потоків, на архітектурах x86 та ARM
++++

``Завдання``:
~~~~

* Написати програму, яка запускає два потоки, використовуючи pthread;
* Кожен потік збільшує значення глобальної змінної на 1 в циклі 100000000 раз;
* В кінці виконується ``join`` потоків, і виконується вивід отриманого значення в термінал;
* Дану програму необхідно зібрати з прапорцями ``-o0`` та ``-o2`` для різних архітектур - x86 та ARM;
* Отримані результати порівняти та пояснити.


``Хід роботи``:
~~~~

У ході виконання лабораторної роботи написано програму, призначенням якої є інкрементація однієї глобальної змінної 
у двох потоках, від 0 до певної кількості разів, яка задається користувачем при запуску програми в терміналі. 
Для можливості використання потоків у програмі треба додати бібліотеку ``pthread.h``, яка реалізує стандарт POSIX. 
Для глобальної змінної був вибраний тип даних ``int``
Компіляція програми буде виконуватися за допомогою ``Makefile``
Компіляція і задання кількості циклів виконання програми матиме наступний вигляд:
::

  ~$ make src/lab1_threaded_applications
  ~$ ./src/lab1_threaded_applications 1000000 -o0(-o2)

В результаті виконання програми для архітектури x86 отримали результати для різних оптимізацій (Табл.1):

 Таблиця 1. Результати виконання програми для різних оптимізацій для архітектури x86
.. table::

+-------------------------------------------------------------------------------------------------------+
| Результати для різних оптимізацій для архітектури x86                                                 |
+---------------------------------------------------+---------------------------------------------------+
|                   Оптимізація -o0                 |  Оптимізація -o2                                  |
+------------------------+--------------------------+------------------------+--------------------------+
| Час виконання,мс       | Кінцевий результат       | Час виконання,мс       | Кінцевий результат       |
+------------------------+--------------------------+------------------------+--------------------------+
| 18.963                 | 1000001                  | 24.591                 | 1000002                  |
+------------------------+--------------------------+------------------------+--------------------------+
| 11.312                 | 1000001                  | 17.125                 | 1000001                  |
+------------------------+--------------------------+------------------------+--------------------------+
| 19.17                  | 1000002                  | 45.666                 | 1000001                  |
+------------------------+--------------------------+------------------------+--------------------------+
| 24.666                 | 1000001                  | 12.48                  | 1000001                  |
+------------------------+--------------------------+------------------------+--------------------------+
| 59.895                 | 1000001                  | 20.108                 | 1000002                  |
+------------------------+--------------------------+------------------------+--------------------------+
| 24.753                 | 1000002                  | 41.162                 | 1000001                  |
+------------------------+--------------------------+------------------------+--------------------------+
| 18.66                  | 1000001                  | 25.73                  | 1000002                  |
+------------------------+--------------------------+------------------------+--------------------------+
| 11.21                  | 1000001                  | 24.627                 | 1000002                  |
+------------------------+--------------------------+------------------------+--------------------------+
| 15.483                 | 1000001                  | 18.961                 | 1000001                  |
+------------------------+--------------------------+------------------------+--------------------------+
| 61.176                 | 1000002                  | 26.612                 | 1000002                  |
+------------------------+--------------------------+------------------------+--------------------------+
Отримали, що середній час виконання програми з оптимізацією ``-o0 - 26.43 мс``, з оптимізацією ``-o2 - 25.7 мс``.
Аналогічні операції були проведені і для архітектури ARM. Результати виявилися дуже схожими на ті, 
які були отримані для архітектури x86, однак у обох випадках, результат завжди був відмнним від очікуваного, 
тобто отримане число не дорівнювало рівно 1 000 000, як було задумано а відрізнялося на декілька одиниць, тобто це підтверджує дуже малу похибку.

``Висновки``:
~~~~

В цій лабораторній роботі я вперше спробував запустити програму на мікрокомп'ютері. 
Порівнюючи результати роботи написаної програми на різних архітектурах, можна зробити висновок, 
що програма виконує рахунок з дуже незначною похибкою. Також я зробив висновок, 
що на будь-якій складності роботи прапорці оптимізації не мають вагомого впливу, і результати 
(особливо це помітно в тривалості виконання програми) приблизно співпадають (детальніше в Таблиці 1)

