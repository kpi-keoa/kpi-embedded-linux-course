==========================================================
Лабораторна робота №1. Введення в розробку модулів ядра.
==========================================================



Завдання:
~~~~~~~~~~~~~
* Зібрати мінімальний модуль Linux-ядра вручну;
* Зібрати мінмальне Linux-оточення з використання BusyBox;
* Зібрати перший модуль ядра;
* Написати та зібрати власний модуль ядра :
    * При його підключенні, він виводить ім'я користувача передане в якості параметру модуля. Якщо параметр не задано, вивести попередження;
    * При виклику *exit_callback* модуля, щоб він виводив значення *jiffies* та час в секундах від *init* до *exit*.

Хід роботи:
~~~~~~~~~~~~~~~
За основу власного модуля взято демонстративний модуль ``firstmodule``.

Використані бібліотеки
--------------------------

* ``<linux/module.h>`` - потрібна для функціонуванн всіх модулів;
* ``<linux/kernel.h>`` - використовується для *sysinfo*;
* ``<linux/init.h>`` - використовується для ініціалізації та закриття;
* ``<linux/jiffies.h>`` - тут знаходиться лічильник та допоміжні функції.

Використані макроси та функції
----------------------------------

``MODULE_DESCRIPTION`` - макрос для опису модуля;

``MODULE_AUTHOR`` - автори модуля;

``MODULE_VERSION`` - версія модуля;

``MODULE_LICENSE`` - тип ліцензії;

``module_param`` - використовується для передачі параметрів в модуль;

``jiffies_delta_to_msecs`` - використовується для розрахунку проміжку часу. На вхід очікує різницю *jiffies*;

``printk`` - стандартний інструмент для друку повідомлень і, як правило, найпростіший спосіб відстеження і улагодження. По суті це все тей же pritf, який має функціональні відмінності;

``jiffies`` - глобальна змінна, яка містить кількість тактів, що сталися з моменту завантаження системи.
При завантаженні ядро ініціалізує змінну до нуля, і вона збільшується на одиницю при кожному перериванні таймера.

Висновки
~~~~~~~~

Було зібрано мінімальне ядро linux та набір user space утиліт, Емуляція поводилася з використанням qemu. В блоці нижче показано результати роботи модулю з передачею параметра ``user`` та без.
При передачі без параметра, виводиться відповідне сповіщення в лог. ядра з рівнем ``KERN_WARNING`` та ім'ям користувача - ``$username``. Також при вигрузці модуля виводиться час його роботи в секундах.


.. code-block:: bash

/mnt # insmod labfirst.ko
[  157.321940] labfirst: loading out-of-tree module taints kernel.
[  157.347023] Module starts without username!
[  157.347104] Hello, $username!
[  157.347104]  Jiffies = 4294824661
[  157.368896] insmod (94) used greatest stack depth: 13696 bytes left
/mnt # rmmod labfirst.ko
[  179.688260] Long live the Kernel! wrk time - 22 sec.
/mnt # insmod labfirst.ko user="Nysh"
[  202.258954] Hello, Nysh!
[  202.258954]  Jiffies = 4294869573
/mnt # rmmod labfirst.ko
[  434.181193] Long live the Kernel! wrk time - 231 sec.
/mnt #

