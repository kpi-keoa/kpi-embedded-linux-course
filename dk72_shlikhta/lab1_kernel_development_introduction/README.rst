=============================================
Лабораторна робота №1
=============================================

Тема
------

**Введення в розробку модулів ядра**

Завдання:
-------
Змінити модуль ядра, який поданий у прикладі, наступним чином:
	* Замість *$username* виводилось ім'я, передане в якості параметра модуля при його підключенні за допомогою *insmod*
	* Якщо параметр не задано, то використовувати той же *$username* за замовчуванням і в лог ядра виводилось повідомлення з рівнем логінгу *WARNING*, що ім'я не було задано
	* Доповнити *exit_callback* модуля, щоб по завершенню модуль також друкував в лог поточне значення *jiffies* та час в секундах, який пройшов від *init* до *exit*

Хід роботи
-------

**Опис виконаної роботи** 
	В ході роботи було допрацьовано програмний код з прикладу *firstmod.c* та 
*Makefie* який було надано для збирання модулю ядра. 

Спочатку було розглянуто матеріали в яких описано як створювати та використовувати параметри модулів. Далі було створено вказівник на змінну `username` типу *char* і на її основі створено параметр модуля. Для роботи з параметрами модуля було додатково підключено заголовок ядра *moduleparam.h*.

Було допрацьовано *init_callback* модуля так, щоб якщо при підключенні модуля було передано параметр *username*, то модуль "вітав" користувача з ім'ям *<username>*, інакше за замовчуванням використовував *$username* та виводив попередження про те, що ім'я користувача не було задано з рівнем логінгу *WARNING*.

у *exit_callback* модуля також було дописано обрахунок тривалості роботи модуля у секундах з використанням заголовку ядра *jiffies.h*.

До *Makefie* було додано ціль `run` яка запускає емуляцію ядра в QEMU.(Цю ідею було підглянуто у Олега Матюші) 

На останок було запущено вище згадану емуляцію -> створено директорію -> змонтовано до неї перший розділ нашого диска -> запущено модуль без параметра -> перевірено правильність його роботи -> вивантажено модуль -> запущено модуль з заданим параметром -> перевірено правильність його роботи 


Тест без переданого параметра:

.. code-block:: bash

	/mnt # insmod ./lab_1.ko
	[   78.349446] lab_1: loading out-of-tree module taints kernel.
	[   78.356907] <username> wasn't defined:(
	[   78.360180] Hello, $username!
	[   78.360180] jiffies = 4294745540
	[   78.366911] insmod (99) used greatest stack depth: 13928 bytes left
	/mnt # rmmod lab_1.ko
	[   89.164170] Long live the Kernel!
	[   89.164170] Working time = 10 sec

Тест з переданим параметром:

.. code-block:: bash

	/mnt # insmod ./lab_1.ko username=shurik
	[  144.366431] Hello, shurik!
	[  144.366431] jiffies = 4294811547
	/mnt # rmmod lab_1
	[  148.524403] Long live the Kernel!
	[  148.524403] Working time = 4 sec   

Висновки
-------
В ході роботи було сконфігуровано та зібрано ядро Linux та мінімальний набір userspace утиліт. Було "написано" власний модуль ядра згідно із завданням, зібрано та протестовано за допомогою емулятора QEMU. Також я навчився працювати з параметрами модуля. Дізнався як підключати та вивантажувати модуль до працюючого ядра. Навчився виводити повідомлення до терміналу за допомогою `printk`, а також визначати тривалість роботи модуля за допомогою методів які входять до складу заголовку ядра *jiffies.h*.


