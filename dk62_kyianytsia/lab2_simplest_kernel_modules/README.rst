======================
Лабораторная работа №2
======================

**Задание:**

Дополнить модуль ядра из примера. Модуль должен иметь возможность принимать аргумент при своем подключении и выводить его в лог ядра. Так-же он должен иметь tasklet который выводит значение ``jiffies``. Сравнить результаты ``jiffies`` выведенные в init и tasklet. Объяснить, почему разница между двумя выводимыми ``jiffies`` (в init и в тасклете) может быть равна 0, 1 или 2.

-----------------------

**Ход работы:**

* Был доработан и собран модуль ядра. Програмный листинг можно просмотреть в файле `firstmod.c <линк на гитхаб на файл с кодом (пример: ```firstmod.c <https://github.com/AlexOstrianko/kpi-embedded-linux-course/blob/dev/dk62_ostrianko/lab2_simplest_kernel_modules/firstmod.c>`__``)>`__
* Для загрузки модуля:
.. code-block::

	sudo insmod firstmod.ko

* Для того чтоб посмотреть лог ядра:
.. code-block::

	sudo dmesg -k | tail -3

``tail -3`` покажет последние три строки.

* Для того что бы выгрузить модуль:
.. code-block::
	
	sudo rmmod firstmod.ko

* Дальше посчитаем время между включениями модуля на х86 и BBXM, интервал между которыми был 10 минут. Для увеличения точности в ``Makefile`` после вызова команды просмотра логов ядра использую команду, которая отображает системное время.
.. code-block::

  date '+DATE: %H:%M:%S'

* Результат для х86:
	Первое значение: 4304106425
	Второе значение: 4304287605

*Результат для arm:
	Первое значение: 45055
	Второе значение: 103269

* Для расчета 1 ``jiffies`` в милисекундах используется формулла:
  ``delta jiffies / Hz * 1000``
	
  Значит,
	для х86: ``(4304287605 - 4304106425) / 300 * 1000 = 603933`` мс, когда между процессами прошло ``(49 - 39) * 60 + (49 - 45) = 604`` секунд.
	для arm: ``(103269 - 45055) / 100 * 1000 = 582140`` мс, когда между процессами прошло ``(37 - 28) * 60 + (45 - 2) = 583`` секунд.

----------------------

**Вывод**
Проанализировав данный результат можно сказать, что исходя из теории можно было ожидать результат 603 и 583 сукунды, мы получили 603.933 и 582.140 соответственно каждой платформы. В таком результате присутствует погрешность которая не преувеличивает 1 секунды, что является незначительной погрешностью.

	