Лабораторна робота 2
====================

Завдання:
---------
Написати модуль ядра, який:
	* Приймає 2 параметри *cnt* і *delay*
		- *cnt* - кількість циклів, які повинен опрацювати таймер
		- *delay* - затримка між двома спрацюваннями таймера
		- Модуль повинен відпрацьовувати при *cnt* і *delay* рівних нулю
	* Спочатку *init* друкує поточне значення *jiffies* в лог ядра
	* Запускає тасклет, котрий повинен надрукувати своє значення *jiffies* в лог ядра
	* Виділяє масив розміру *cnt*, використовуючи динамічну алокацію
	* Потім *init* запускає таймер з затримкою *delay* і функція завершується
		- При спрацюванні таймер кладе поточне значення *jiffies* до масиву і перезапускається з затримкою *delay*
		- Загальна кількість разів, які запускається таймер дорівнює *cnt*
	* В *exit* модуль повинен надрукувати поточне значення *jiffies* і вивести всі значення з масиву

Хід роботи
----------
В процесі виконання лабораторної роботи було написано модуль ядра за відповідним завданням.

Модуль приймає на вхід два параметри cnt - к-ть циклів та delay, введені данні перевіряються на коректність

Функція обробник тасклету `tasklet1_handler` виводить значення *jiffies* на момент виклику тасклету.
Функція обробник таймеру `timer1_handler` *cnt* разів записує до *array* значення *jiffies*.

Як вже було зауважено раніше в `init` функції дані перевіряються на правильність, також там виводиться *jiffies* при ініціалізації модулю. 
Крім того в ф-ції виділяється пам'ять для нашого масиву за допомогою kmalloc в залежності від переданого значення **cnt**.

В `exit` ф-ї виводиться поточне значення *jiffies*, виводиться значення массиву, видаляється тасклет та таймер, вивільняється пам'ять масиву.

Результат
---------

.. code-block::
        
        /mnt # insmod /mnt/lab2.ko cnt=10 delay=100
	[  451.859331] init module>> jiffies = 4295118998
	[  451.859693] tasklet>> jiffies = 4295118999
	/mnt # rmmod lab2.ko
	[  457.548671] exit module>> jiffies= 4295124687
	[  457.548715] timer>> array[0] jiffies= 4295119110
	[  457.548715] timer>> array[1] jiffies= 4295119229
	[  457.549269] timer>> array[2] jiffies= 4295119339
	[  457.549363] timer>> array[3] jiffies= 4295119442
	[  457.549867] timer>> array[4] jiffies= 4295119551
	[  457.550054] timer>> array[5] jiffies= 4295119669
	[  457.550275] timer>> array[6] jiffies= 4295119786
	[  457.550701] timer>> array[7] jiffies= 4295119891
	[  457.550811] timer>> array[8] jiffies= 4295120002
	[  457.550929] timer>> array[9] jiffies= 4295120111


        /mnt # insmod /mnt/lab2.ko cnt=0 delay=100
	[  473.322195] init module>> jiffies = 4295140461
	[  473.322526] init>> cnt = 0
	[  473.322677] tasklet>> jiffies = 4295140462
	/mnt # rmmod lab2.ko
	[  477.916502] exit module>> jiffies= 4295145055


        /mnt # insmod /mnt/lab2.ko cnt=5 delay=0
	[  495.767191] init module>> jiffies = 4295162906
	[  495.767544] tasklet>> jiffies = 4295162907
	[  495.767713] init>> delay = 0
	/mnt # rmmod lab2.ko
	[  504.110280] exit module>> jiffies= 4295171249
	[  504.110546] timer>> array[0] jiffies= 4295162908
	[  504.111406] timer>> array[1] jiffies= 4295162909
	[  504.111695] timer>> array[2] jiffies= 4295162911
	[  504.111848] timer>> array[3] jiffies= 4295162912
	[  504.112007] timer>> array[4] jiffies= 4295162914



        /mnt # insmod /mnt/lab2.ko cnt=10 delay=1000
	[  542.942845] init module>> jiffies = 4295210082
	[  542.943120] tasklet>> jiffies = 4295210082
	/mnt # rmmod lab2.ko
	[  546.985403] exit module>> jiffies= 4295214124
	[  546.985601] exit>> timer kill
	[  546.985713] timer>> array[0] jiffies= 4295211137
	[  546.986199] timer>> array[1] jiffies= 4295212160
	[  546.986334] timer>> array[2] jiffies= 4295213186


Висновок
--------
В ході роботи було розроблено власний модуль ядра та вивчено теоретичну частину.

	1. *jiffies*, яке друкується в *init* і яке виводить тасклет відрізняється, через те що ці операції відбуваються не одночасно.
           в сон для очікування сторінки пам'яті в разі її відсутності.
	2. При *delay = 0* Таймер буде викликатися з мінімально допустимою затримкою.
