==========================================================
**Лабораторна робота №1 Введення в розробку модулів ядра**
==========================================================


**Завдання:**
~~~~~~~~~~~~~
* Зібрати мінімальне Linux-ядро
* Зібрати мінмальне Linux-оточення для ядра
* Написати та зібрати модуль ядра, який:    
    * Виводить параметр модуля при його підключенні.    
    * Виводить час роботи модуля при вигрузці.
  
**Хід роботи:**
~~~~~~~~~~~~~~~
За основу власного модуля взято код модуля firstmodule, наданого в методичних вказівках до лабораторної.
Додаємо статичні змінні для збереження вхідного параметру імені користувача, та для збереження часу роботи.
Для розрахунку часу роботи використовуємо функцію ``jiffies_delta_to_msecs``. 


**Використані бібліотеки**
--------------------------

* ``<linux/module.h>`` потрібна для всіх модулів;
* ``<linux/kernel.h>`` використовується для *sysinfo*;
* ``<linux/init.h>`` використовується для ініціалізації та закриття;
* ``<linux/jiffies.h>`` містить лічильник та допоміжні функції;

**Використані макроси та функції**
----------------------------------

``MODULE_DESCRIPTION`` макрос для опису модуля;

``MODULE_AUTHOR`` автори модуля;

``MODULE_VERSION`` версія модуля;

``MODULE_LICENSE`` тип ліцензії. У нас подвійна, MIT/GPL;

``module_param`` використовується для передачі параметрів в модуль;

``jiffies_delta_to_msecs`` використовується для розрахунку проміжку часу. На вхід очікує різницю *jiffies*;

``printk`` використовується для виведення інформації в консоль;

Висновки
~~~~~~~~
В ході виконання лабораторної роботи було зібрано та перевірено свій мінімальний модуль ядра, що відповідає завданню. Емуляція поводилася в QEMU.
Протестовано модуль, який забезпечує вивід імені користувача та проміжок часу від init до exit. При відсутності параметра імені, виводиться відповідне повідомлення в лог 
та відбувається присвоєння дефолтного ім'я користувача $username. При вигрузці, отримуємо в лог час роботи модуля в секундах.
