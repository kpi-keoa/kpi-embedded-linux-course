==============================
Краповницький Єгор Іванович
==============================


#. Локальні та віддалені репозиторії Git. Наведіть команду для відправки локальних комітів з гілки dev до віддаленого репозиторію.

   - Если в процесс разработки внедрен 1 человек, ему достаточно выполнить команду "git init" для инициализации локального репозитория и начать с ним работу
   - Для коллаборации с несколькими разработчиками используют удаленные репозитории git. Для добавления удаленного репозитория необходимо использоваться команду
    "git remote add <name> <url>".
   - Для просмотра всех удаленных репозисториев пользуемся командой "git remote -v". После того, как разработчик сделал локальные комиты и хочет отправить их на
     удаленный репозиторий ему необходимо выполнить команду "git push <remote_name> <branch>". В случае с веткой dev комагда будет такая "git add origin dev".

#. Для чого слугує файл .gitignore? Наведіть його синтаксис для виключення всіх файлів з розширенням .o в усіх директоріях та
   директорії build в корені репозиторію

   - Файл .gitignore необходим для игнорирования определенных папок и файлов, таким образом они не попадают в комиты, ибо git их попросту игнорирует.
     Такой файл используется для игнорирования промежуточных результатов компиляции, других ненужных файлов, которые "загрязняют" репозиторий.
     Данный заставляет игнорировать все файлы с расширением .o, а также в директорию build :
     *.o
     /build/

#. Що таке QEMU? Для чого він використовується? Що дає KVM в QEMU?

   -QEMU - виртуальная машина для эмуляции другой архитектуры, к примеру ARM или x86. Она используется для разработки модулей ядра, ибо, разрабатывая модули на хост
   системе, при проектировке могут возникать ошибки, не позволяющие адекватно продолжать разработку на этой же хост системе. Поэтому используется вариант с одной системой
   для отладки(которая эмулируется с помощью QEMU), и системой, которая занимается управлением, таким образом упрощая процесс разработки.
   KMV позволяет использовать не модифицированные образы дисков.

#. Що таке Busybox? Для чого він використовується в курсі?

   - Busybox является набором утилит Linux для базовых потребностей пользователя(копирования, переменещения, просмотра содержимого директорий)


#. printk та його більш сучасні аналоги. Наведіть приклад використання (з форматуванням unsigned 32-bit integer та string)

   - printk - команда, подобная printf, которая используется для вывода сообщений в журнал ядра, задавая определенный уровень сообщения.
     Аналогами printk являются pr_*(), где вместо "*" в имя команды вписывается уровень сообщения. Например, pr_info, pr_emerg и т.д.
     Пример:
     printk(KERN_INFO "A = %un", A); printk(KERN_INFO "String a = %sn", a);

#. Переповнення jiffies. Як розрахувати значення jiffies, що відповідає часу на 250 мс пізніше поточного значення?
   Які є функції для таких обчислень?




#. Тасклети. Як реалізовані? Для чого використовуються? Наведіть приклад створення tasklet'у.

    - Тасклет це базовий механізм відложенної роботи, який визве передану
   	 йому ф-цію з данними, які йому передали, при наступному заході в bottom half.

     #include <linux/interrupt.h>	// додаємо заголовок, для роботи з тасклетами.

	 struct tasklet_struct {		// структура тасклета
     /* ... */
     void (*func)(unsigned long);
     unsigned long data;
     };

 	 ініціал. таски, передається
	 вказівник на структуру тасклета, вказівник на функцію, яку необх. виконувати і
	 данні, які передаються ф-ї.

	 void tasklet_init(struct tasklet_struct *t,
	 void (*func)(unsigned long), unsigned long data);

	 DECLARE_TASKLET(name, func, data);
	 DECLARE_TASKLET_DISABLED(name, func, data);

#. Що таке Soft IRQ та які обмеження він накладає на відповідний код? Опишіть коротко.
   Які з вивчених механізмів відкладеної роботи виконуються в Soft IRQ?
