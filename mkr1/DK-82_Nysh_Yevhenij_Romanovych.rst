==============================
Ниш Євгеній Романович
==============================


#. Наведіть команди git для додавання файлів та директорій ./dev ./dev/file.c ./.gitignore до локального репозиторію одним комітом
   (уважно).
   
   - git add -A
   - git commit -m 'message'

#. Гілки в Git: для чого використовуються, який принцип роботи з гілками. Наведіть команди для створення нової гілки та переключення
   між гілками.
   
   - git branch mkr - створення нової гілки; git checkout -b mkr - переключення на існуючу гілку. Гілки використовуються для відмежування від 
     основної лінії розробки для продовження своєї частини роботи уникаючі конфліктів з основною лінією.


#. Прокоментуйте (за допомогою коментарів Make) Makefile що використовується для збірки модулів ядра в курсі.
   Що відбувається в кожній строчці?
   
   - obj-m += khmod.o - це те, що використовується в Kbuild
     KBUILDDIR ?= ../linux-5. - каталог, що містить Makefile для збірки ядра


#. Що таке Busybox? Для чого він використовується в курсі?
   
   - Busybox є набором консольних утиліт Linux систем. В курсі він використовується для збірки мінімального Linux-оточення

#. Яким чином модуль ядра отримує параметри? Наведіть код для двох параметрів (count - integer та path - строка),
   значення яких за замовчуванням 69 та "ctl:data" відповідно. Якою командою переглянути параметри модуля ядра?
   
   - Модулі можуть приймати аргументи командного рядка, але не за допомогою argc/argv.
     Щоб дозволити передачу аргументів вашому модулю, оголосіть змінні, які прийматимуть значення аргументів командного рядка як глобальні, 
     а потім використовуйте макрос module_param () для налаштування механізму. 
     Під час виконання insmod заповнить змінні будь-якими заданими аргументами командного рядка. 
     Оголошення змінних та макроси повинні бути розміщені на початку модуля для ясності.
     команда щоб переглянути параметри модуля ядра - modinfo

#. printk та його більш сучасні аналоги. Наведіть приклад використання (з форматуванням unsigned 32-bit integer та string)
   
   - printk() -це функція рівня kernel, яка має можливість виводити дані на різні рівні журналу, як визначено <linux/kernel.h> .
     сучасні аналоги printk() це pr,  dev
     
     static char *username = NULL;
     printk(KERN_INFO "Hi, %s!\njiffies = %lu\n", username, jiffies_init_time);
     
#. Які обмеження має алокація фізичної (kmalloc) та віртуальної (vmalloc) пам'яті? Які їх переваги та недоліки?
   
   - Розмір пам'яті, виділеної kmalloc, має обмеження (128 КБ), тоді як vmalloc не має обмеження; 
     kmalloc може гарантувати, що фізична адреса виділеної пам'яті є безперервною, але vmalloc не може гарантувати це;
     процес виділення пам'яті kmalloc може бути атомарним процесом (з використанням GFP_ATOMIC), тоді як vmalloc може блокувати виділення пам'яті;
     kmalloc виділяє менше пам'яті, тому kmalloc працює швидше, ніж vmalloc;

#. Таймери на timer wheel. На базі чого реалізовані? Як працюють? Наведіть фрагмент коду для запуску таймера.
   
   - В алгоритмі timer wheel використовується набір слотів, де кожен слот є деяким відліком часу, після досягнення якого 
     у майбутньому закінчується час таймера. Слоти визначаються у відповідність до логарифмічної шкалою часу, причому для цього 
     використовується п'ять слотів. За допомогою змінної jiffies визначається кількість груп, які є часом досягнення спрацьовування 
     таймера в майбутньому (де кожна група являє собою список таймерів).
     