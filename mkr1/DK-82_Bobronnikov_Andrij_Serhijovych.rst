==============================
Бобронніков Андрій Сергійович
==============================


#. Що таке Git та для чого використовується? Як створити новий локальний репозиторій Git? Наведіть команди.

   - Git - система контролю версій. Вона дозволяє багатьом розробникам працювати у своїх гілках, не порушуючи
	 роботу інших розробників. Для створення локального репозиторію:
	 git init <name>
	 
#. Який формат опису повідомлень комітів використовується в курсі? Навіщо потрібно дотримуватися певного формату?
   Наведіть приклад команди, що додає до репозиторію коміт з важливими виправленнями кодової бази
   
   - У курсі ми використовуємо Conventional Commits. Це потрібно для швидкого розуміння сенсу коміту, приведення до
     усім зрозумілого формату, автоматичної генерації changelog.
	 git commit -m "fix(lab1): fixing bug of ..."

#. Який інструмент використовується в курсі для автоматичного форматування вихідних файлів C відповідно до Coding Style?
   Де взяти основний шаблон з описом формату для коду ядра? Наведіть команду для форматування файлу module.c відповідно
   до Coding Style ядра.
   
   - Для автоматичного форматування до Coding Style використовуємо Formatter (clang-format). 
	 clang-format -i --style=file ./module.c
	 Потрібний файл .clang-format знаходиться у кореневій директорії архіву з вихідними файлами ядра наприклад, на kernel.org
	 
#. Для чого використовуються ramdisk (initramfs)? Наведіть приклад сценарію реального використання.
   Що таке bzImage, його історія та для чого він використовується.
   
   - Initramfs - механізм для мінімального завантаження ядра. Він монтує кореневий розділ та передає керування наступним модулям.
     Цей механізм можна використовувати у випадку, коли, наприклад, rootfs (кор. файлова система) знаходиться на іншому 
	 пристрої і ми спочатку мінімально завантажуємо систему.
	 bzImage - стиснений формат ядра Linux. Розмір такого файлу в десятки разів менше, що зручно на малих системах.

#. Які обмеження існують для модулів ядра в порівнянні з userspace-додатками?
   
   - До модулів ядра висуваються більш жорсткі вимоги: вони мають працювати більш надійно, адже їх робота впливає
     на всю систему, та не займати зайві системні ресурси (наприклад, нескінченними циклами), мають працювати швидко. 
	 Модулі ядра не використовують стандартні бібліотеки.
   
#. printk та його більш сучасні аналоги. Наведіть приклад використання (з форматуванням unsigned 32-bit integer та string)
   
   - Printk (print kernel) - функція для виводу текстових даних з модулів ядра. Використання дуже схоже на стандартний printf, який 
     використовувати для модуля ядра не можна. 
	 printk(KERN_INFO "integer: %ld\n", num);
	 printk(KERN_INFO "string: %s"\n", str);

#. Наведіть приклад виділення та вивільнення пам'яті за допомогою kmalloc та vmalloc. Коли доцільно використовувати kzalloc?

   - int *kmalloc_int = kmalloc((sizeof(*kmalloc) * 10), GFP_KERNEL);
     kfree(kmalloc_int);
	 int *vmalloc_int = vmalloc((sizeof(*vmalloc) * 10));
     vfree(vmalloc_int);
	 kzalloc очищує пам'ять перед виділенням. Доцільно використовувати якщо ми не впевнені, що пам'ять для виділення чиста.
	 
#. Як працює та для чого використовується макрос container_of. Наведіть приклад доступу до поля data контейнеру типу struct outer, 
   всередині структури якого визначено поле innerobj типу struct inner.
