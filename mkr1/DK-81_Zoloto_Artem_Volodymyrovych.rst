==============================
Золото Артем Володимирович
==============================


#. Що таке Git та для чого використовується? Як створити новий локальний репозиторій Git? Наведіть команди.
 -Відповідь 
Git дозволяє вам відстежувати кожну змін, яку ви та ваша команда робите під час розробки програмного забезпечення.
Використовується один репозиторій коду, який працює незалежно, а потім об'єднується.
#. Як підтягнути зміни, що відбулись у віддаленому upstream-репозиторії (гілка master) до локального репозиторію? Наведіть команду.
-Відповідь
Для оновлення свого коду передусім потрібно стягнути всі зміни. Нам потрібно переконатися, що ми синхронізовані. Будучи 
на основній гілці master, робимо: git pull. Потім переходимо на нашу гілку розробки. Тепер для синхронізації
з гілкою master у нас є різні можливості.Якщо це загальна гілка, то ми пушнемо дані зміни в
віддалений репозиторій origin/master, інші розробники теж зможуть працювати над цим же кодом.
Однак якщо ця гілка моя і над нею працюємо тільки я, тоді можна використовувати команду git rebase
git pull origin master

#. Для чого використовуються ramdisk (initramfs)? Наведіть приклад сценарію реального використання.
   Що таке bzImage, його історія та для чого він використовується.
-Відповідь
ramdisk - це набір блоків, який копіюється у виділений фрагмент пам'яті, а потім обробляється як блоковий пристрій.
Initrd (початковий ramdisk) – це ramdisk, який монтується під час завантаження. Initramfs – це cpio архів файлів, який 
завантажується під час завантаження. Ядро завантажує вміст у віртуальну файлову систему, яку він називає rootfs. Старі системи 
використовують initrd(він був створений до initramfs), але всі сучасні системи повинні використовувати initramfs. 
У міру розвитку ядра Linux розмір ядер, що генеруються користувачами, виріс за межі обмежень, що накладаються
деякими архітектурами, де простір, доступне зберігання стиснутого коду ядра, обмежено.
Формат bzImage (big zImage) був розроблений для подолання цього обмеження шляхом поділу ядра на несуміжні
 області пам'яті.
#. Завантаження, вивантаження, виведення списку завантажених модулів ядра та інформації про певний модуль ядра.
   Наведіть команди.
-Відповідь
Завантажити модуль в ядро ​​можна за допомогою двох команд: insmod і modprobe.Щоб його вивантажити, можна скористатися командою rmmod або 
тією ж командою modprobe з ключем "-r". Після завантаження модуля можна перевірити наявність у списку завантажених в ядро модулів за 
допомогою команди «lsmod»:
Зручно перевіряти, чи завантажений модуль за допомогою grep:
  sudo lsmod | grep vbox
А більш детальну інформацію про кожен модуль можна отримати за допомогою утиліти modinfo:
  modinfo fuse
#. Завантаження та вивантаження модулів ядра, з позиції користувача та з позиції розробника модуля ядра.
-Відповідь
Завантажити модуль в ядро ​​можна за допомогою двох команд: insmod і modprobe, що відрізняються один від одного
можливістю прорахунку та задоволення залежностей. Команда insmod завантажує конкретний файл з розширенням ko,
при цьому якщо модуль залежить від інших модулів, ще не завантажених в ядро, команда видасть помилку, і не завантажить модуль.
Команда «modprobe» працює тільки з деревом модулів, і можливе завантаження тільки звідти на ім'я модуля, а не на ім'я файлу.
Щоб його вивантажити, можна скористатися командою rmmod або тією ж командою modprobe з ключем "-r". 
Як параметр обом командам потрібно передати лише ім'я модуля. Якщо модуль не використовується, він буде вивантажений, а 
якщо використовується — буде видана помилка, і доведеться вивантажувати всі модулі, які від нього залежать.

#. printk та його більш сучасні аналоги. Наведіть приклад використання (з форматуванням unsigned 32-bit integer та string)
-Відповідь
printk() -це функція рівня kernel, яка має можливість виводити дані на різні рівні журналу
printk дозволяє абоненту вказати тип і важливість повідомлення, що надсилається.Цей специфікатор називається
рівнем журналу. Рівень журналу визначає тип повідомлення, що надсилається до журналу повідомлень ядра. Рівень журналу
визначається додаванням рядка, що описує рівень журналу,перед початком створюваного повідомлення. 
Наприклад, повідомлення може бути створене при використанні KERN_INFO:
printk (KERN_INFO "Повідомлення: %s\n", arg);

#. Які обмеження має алокація фізичної (kmalloc) та віртуальної (vmalloc) пам'яті? Які їх переваги та недоліки?
-Відповідь
Пам'ять, що запитується kmalloc (), знаходиться в області відображення фізичної пам'яті і також фізично безперервна.
Вони мають лише фіксоване усунення від реальної фізичної адреси. Через відносно прості відносини перетворення
Існує обмеження на розмір пам'яті, що запитується Не може перевищувати 128 КБ.
vmalloc застосовується для частини пам'яті з послідовними логічними адресами та переривчастими фізичними адресами.
Фізична пам'ять, виділена безперервно, але пам'ять, виділена kmalloc за один раз, не може бути занадто великою.
Тепер, коли сказано vmalloc, віртуальна пам'ять, виділена vmalloc, безперервна, та виділений діапазон
Основна функція vmalloc в основному відповідає за розподіл сторінок та встановлення відповідності між віртуальними
адресами та фізичними адресами.

#. Як працює та для чого використовується макрос container_of. Наведіть приклад доступу до поля data контейнеру типу struct outer, 
   всередині структури якого визначено поле innerobj типу struct inner.
-Відповідь
container_of дозволяє спростити структури даних, опускаючи покажчики батьківські структури.
Він використовується в реалізації пов'язаного списку, так що вузол списку може бути елементом будь-якої структури, і будь-який
знайти батьківську структуру, які мають явного покажчика.

define container_of(ptr, type, member) ({ \
                const typeof( ((type *)0)->member ) *__mptr = (ptr); 
                (type *)( (char *)__mptr - offsetof(type,member) );})