=============================================
Лабораторна робота №6
=============================================

Тема
------

**Символьні пристрої**

Завдання:
-------
Напишите свое символьное устройство с ioctl. Оно должно делать что-то полезное. Например, предоставлять шареную память, или генерировать что-то, или рассчитывать. Например, считать количество вхождений определённого символа или сортировать строки или считать интеграл или ...

Хід роботи
-------

**Опис виконаної роботи** 
В ході роботи було написано модуль ядра мовою С.
Ioctl називають контролем вводу та виводу, який використовують для взаємодії с драйверами пристроїв. В даній роботі використовуємо такі макроси, як _IOW та _IOR, 
вони використовуються як вказівники на дані, які потрібно у випадку з _IOW передати до ядра, а у випадку _IOR передати з ядра.
В даній роботі було розрблено сивольний пристрій, який може зчитувати(змінювати) число яке було введене, зчитування(зміна) числа може обирається користувачем.
Для запуску модуля потрібно спочатку скомпілювати його:
`make KBUILDDIR="<KBuild directory>"`

Запускаємо ядро за допомогою QEMU:
`qemu-system-x86_64 -enable-kvm -m 512M -smp 4 -kernel "<bzImage path>" -initrd "<path BusyBox shell utilits .gz>" \
                    -append "console=ttyS0" -nographic \
                    -drive file=fat:rw:./<path to module>,format=raw,media=disk`
                    
Підготовчі дії:
`mkdir mnt`
`mount -t vfat /dev/sda1 /mnt`

Запуск модуля:
`insmode /mnt/<module_name.ko>`

Вигрузка модуля:
`rmmod <module_name>`

Висновки
-------
В ході виконання лабараторної роботи було завоєна робота з сивольними пристроями. 

Тест №1

.. code-block:: bash

/ # insmod /mnt/cdev.ko
[   60.082781] cdev: loading out-of-tree module taints kernel.
[   60.095223] Major = 248 Minor = 0 
[   60.098463] Device Driver Insert...Done!!!
[   60.104483] insmod (93) used greatest stack depth: 13928 bytes left
/ # rmmod cdev
[   76.590277] Device Driver Remove...Done!!!
/ #

Тест №2

Opening Driver
Enter the Value to send
43212
Writing Value to Driver
Reading Value from Driver
Value is 43212
Closing Driver
